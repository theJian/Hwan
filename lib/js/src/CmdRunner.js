// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Fs          = require("fs");
var Json        = require("@glennsl/bs-json/lib/js/src/Json.bs.js");
var Path        = require("path");
var Json_decode = require("@glennsl/bs-json/lib/js/src/Json_decode.bs.js");

function decodePackageJson(json) {
  return /* record */[/* version */Json_decode.optional((function (param) {
                  return Json_decode.field("version", Json_decode.string, param);
                }), json)];
}

function readPackage(path) {
  return decodePackageJson(Json.parseOrRaise(Fs.readFileSync(path, "utf8")));
}

function readRootPackage() {
  var path = Path.join(__dirname, "../../../", "package.json");
  return decodePackageJson(Json.parseOrRaise(Fs.readFileSync(path, "utf8")));
}

function getVersion($$package) {
  var match = $$package[/* version */0];
  if (match) {
    return match[0];
  } else {
    return "";
  }
}

function echoVersion() {
  console.log(getVersion(readRootPackage(/* () */0)));
  return /* () */0;
}

function runCommand(command, $$package) {
  console.log("command: " + command);
  console.log("package: " + $$package);
  return /* () */0;
}

function run(param) {
  var options = param[1];
  if (options[/* version */0] !== 0) {
    console.log(getVersion(readRootPackage(/* () */0)));
    return /* () */0;
  } else {
    return runCommand(param[0], options[/* package */1]);
  }
}

exports.decodePackageJson = decodePackageJson;
exports.readPackage       = readPackage;
exports.readRootPackage   = readRootPackage;
exports.getVersion        = getVersion;
exports.echoVersion       = echoVersion;
exports.runCommand        = runCommand;
exports.run               = run;
/* fs Not a pure module */
